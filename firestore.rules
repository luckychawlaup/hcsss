
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isPrincipal() {
      return request.auth.uid == "IIDjN5e6RzUMFGOYJ4kE7t3YqgZ2";
    }
    
    function isOwner() {
       return request.auth.uid == "qEB6D6PbjycGSBKMPv9OGyorgnd2";
    }

    function isAdmin() {
      return isPrincipal() || isOwner();
    }
    
    function isTeacher() {
      return exists(/databases/$(database)/documents/teachers/$(request.auth.uid));
    }
    
    function isStudent() {
       return exists(/databases/$(database)/documents/students/$(request.auth.uid));
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }

    match /students/{studentId} {
      // Admin can do anything.
      // Student can read/update their own data.
      // Teacher can read data of students they teach.
      allow read: if isAdmin() || (isAuthenticated() && request.auth.uid == studentId) || isTeacher(); // Teachers need to list students.
      allow create: if isAdmin();
      allow update: if isAdmin() || (isAuthenticated() && request.auth.uid == studentId);
      allow delete: if isAdmin();
    }
    
    match /teachers/{teacherId} {
      // Admin can do anything.
      // Teacher can read/update their own data.
      allow read: if isAdmin() || isTeacher();
      allow create: if isAdmin();
      allow update: if isAdmin() || (isAuthenticated() && request.auth.uid == teacherId);
      allow delete: if isAdmin();
    }
    
    match /announcements/{announcementId} {
      // Any authenticated user can read announcements.
      // Admins and teachers can create/update/delete.
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isTeacher();
    }
    
    match /leaves/{leaveId} {
      // Users can create their own leave requests.
      // Admins and assigned teachers can read/update status.
      allow create: if isAuthenticated();
      allow read, update: if isAdmin() || (isAuthenticated() && get(/databases/$(database)/documents/leaves/$(leaveId)).data.teacherId == request.auth.uid);
      allow delete: if isAdmin();
    }
    
    match /feedback/{feedbackId} {
      // Anyone authenticated can submit feedback.
      // Only admins can read it.
      allow create: if isAuthenticated();
      allow read, update, delete: if isAdmin();
    }
    
    match /homework/{homeworkId} {
       // Teachers and Admins can create/update/delete.
       // Authenticated users can read.
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isTeacher();
    }
    
     match /salaries/{salaryId} {
      // Admin can create.
      // Teachers can only read their own salary slips.
      allow create: if isAdmin();
      allow read: if isAdmin() || (isAuthenticated() && resource.data.teacherId == request.auth.uid);
      allow update, delete: if isAdmin();
    }
    
    match /gallery/{imageId} {
      // Authenticated users can read.
      // Teachers and Admins can write.
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isTeacher();
    }

    match /school_settings/{settingsId} {
      // Anyone can read for branding.
      // Only owner can write.
      allow read: if true;
      allow write: if isOwner();
    }
    
    match /exams/{examId} {
        // Authenticated users can read.
        // Admins can write.
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
    
    match /marks/{studentId}/{examId} {
        // A student can read their own marks.
        // A teacher or admin can read/write marks.
        allow read: if (isAuthenticated() && request.auth.uid == studentId) || isAdmin() || isTeacher();
        allow write: if isAdmin() || isTeacher();
    }
  }
}
